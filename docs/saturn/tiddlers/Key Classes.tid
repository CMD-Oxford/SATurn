created: 20190705100629508
modified: 20190705105215032
title: Key Classes
type: text/vnd.tiddlywiki

The following is a list of key classes and their paths

|!Class Name|!Function|
|[[src/saturn/app/SaturnClient|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/app/SaturnClient.hx]]|An instance of this class is created when people launch SATurn and it is the entry point for the whole application|
|[[src/saturn/app/SaturnServer|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/app/SaturnServer.hx]]|An instance of this class is created when NodeJS is started and passed the transpiled file build/SaturnServer.js.  This class reads the service definition JSON file which is provided when NodeJS is started and initialises all plugins as defined in the service definition|
|[[src/saturn/client/WorkspaceApplication|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/client/WorkspaceApplication.hx]]|Is the top-level ancestor of SaturnClient and defines a lot of the basic functionality of the SATurn environment.  No UI rendering code should be in this class - it should be agnostic of the JavaScript UI library being used.|
|[[src/saturn/client/EXTApplication|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/client/EXTApplication.hx]]|Is the parent class of SaturnClient it implements the JavaScript UI library specific functions which WorkspaceApplication defines but doesn't implement|
|[[src/saturn/client/workspace/Workspace|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/client/workspace/Workspace.hx]]|Is the class which keeps track of which objects and folders are loaded into the SATurn workspace tree located on the left of the interface.  Programs consult the Workspace if they want to retrieve a particular object from the tree using an ID which is specific to each node in the tree.  The Workspace is also responsible for working out which program should be used to open an object|
|[[src/saturn/client/ProgramRegistry|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/client/ProgramRegistry.hx]]|Keeps a track of which entity class types are associated with which programs.  The Workspace uses this registry to work out which program to use to open a specific object of a specific entity class|
|[[src/saturn/db/mapping/SGC|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/db/mapping/SGC.hx]]|Is the ORM mapping file for the SGC|
|[[src/saturn/db/mapping/PSF|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/db/mapping/PSF.hx]]|Is the ORM mapping file for the PSF|
|[[src/saturn/db/Provider|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/db/Provider.hx]]|Is an interface which defines the methods of the ORM|
|[[src/saturn/db/DefaultProvider|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/db/DefaultProvider.hx]]|Includes a default implementation of the ORM minus any parts which differ between databases vendors.  This class is used extensively on both the server and client-side.  This is probably the most important and complicated class of SATurn.  <font color="red">The class is only around 2,000 lines long but really shouldn't be altered unless you really know what you doing.</font>|
|[[src/saturn/db/NodeProvider|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/db/NodeProvider.hx]]|This is the ORM class which is used on the client-side.  Requests made using this class are routed to NodeJS and eventually end up at Provider which has direct access to the underlying database|
|[[src/saturn/db/provider/GenericRDBMSProvider|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/db/provider/GenericRDBMSProvider.hx]]|Implements components of the Provider/ORM interface not provided by DefaultProvider which are specific to RDBMS's|
|[[src/saturn/db/provider/OracleProvider|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/db/provider/OracleProvider.hx]]|Provides the Oracle ORM provider which extends from GenericRDBMSProvider|
|[[src/saturn/db/provider/MySQLProvider|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/db/provider/MySQLProvider.hx]]|Provides the MySQL/MariaDB ORM provider which extends from GenericRDBMSProvider|
|[[src/saturn/db/provider/PostgreSQLProvider|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/db/provider/PostgreSQLProvider.hx]]|Provides the PostgreSQL ORM provider which extends from GenericRDBMSProvider|
|[[src/saturn/db/provider/SQLiteProvider|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/db/provider/SQLiteProvider.hx]]|Provides the SQLite ORM provider which extends from GenericRDBMSProvider|
|[[src/saturn/db/Model|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/db/Model.hx]]|Is the class used to store all of the ORM mapping data included in classes like src/saturn/db/mapping/SGC|
|[[src/saturn/server/plugins/core/BaseServerPlugin|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/server/plugins/core/BaseServerPlugin.hx]]|Server side functionality is added using plugins which extend from this class.  The service definition file lists which plugins should be used for a particular SATurn installation and also any additional configuration that the plugin might need|
|[[src/saturn/server/plugins/core/SocketPlugin|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/server/plugins/core/SocketPlugin.hx]]|Is the server-side plugin which extends BaseServerPlugin to create a Socket.IO server and start it listening|
|[[src/saturn/server/plugins/socket/core/BaseServerSocketPlugin|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/server/plugins/socket/core/BaseServerSocketPlugin.hx]]|Any functionality which is going to be exposed using Socket.IO commands needs to be added as plugins which extend this class|
|[[src/saturn/server/plugins/socket/RemoteProviderPlugin|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/server/plugins/socket/core/RemoteProviderPlugin.hx]]|Intercepts ORM requests from NodeProvider and routes the requests to the correct server-side Provider/ORM instance.  The server-side ORM component is provided by the Server-side plugin DefaultProviderPlugin|
|[[src/saturn/server/plugins/core/DefaultProviderPlugin|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/server/plugins/core/DefaultProviderPlugin.hx]]|Provides the server-side ORM plugin which is configured using the main service configuration file.  The service configuration file instructs this class to create instances of specific provides (i.e. an OracleProvider) and makes data-requests possible via the RemoteProviderPlugin|
|[[src/saturn/server/plugins/core/AuthenticationPlugin|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/server/plugins/core/AuthenticationPlugin.hx]]|Provides a server-side authentication plugin for SATurn.  This plugin has to be instructed via the service configuration file to create an instance of AuthenticationManager which will actually perform the authentication|
|[[src/saturn/server/plugins/core/MySQLAuthPlugin|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/server/plugins/core/MySQLAuthPlugin.hx]]|Provides the default AuthenticationManager implementation for the SGC and is actually where authentication occurs.|
|[[src/saturn/server/plugins/core/RESTSocketWrapperPlugin|https://github.com/ddamerell53/SATurn/blob/master/src/saturn/server/plugins/core/RESTSocketWrapperPlugin.hx]]|Provides a wrapper over all Socket.IO plugins allowing all commands that would be accepted via Socket.IO to also be accepted as REST commands.  The automated way in-which REST commands are mapped to Socket.IO commands means that the REST commands aren't really REST like but can be accepted using basic HTTP commands.  This module allows for custom functions to be defined as REST endpoints which can be configured to accept more REST like commands which are then mapped within the function to the underlying Socket.IO command.  This plugin is configured using the main service definition file|